// Source code is decompiled from a .class file using FernFlower decompiler.
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.io.File;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class Main extends JFrame {
   private File selectedImage;

   public Main() {
      this.setTitle("Steganography");
      this.setSize(500, 400);
      this.setDefaultCloseOperation(3);
      this.setLayout(new BorderLayout());
      JLabel var1 = new JLabel("Text-in-Image (Encoder/Decoder)", 0);
      var1.setFont(new Font("SansSerif", 1, 18));
      this.add(var1, "North");
      JPanel var2 = new JPanel(new FlowLayout(1, 20, 50));
      JButton var3 = new JButton("Encode");
      JButton var4 = new JButton("Decode");
      Dimension var5 = new Dimension(100, 30);
      var3.setPreferredSize(var5);
      var4.setPreferredSize(var5);
      var2.add(var3);
      var2.add(var4);
      this.add(var2, "Center");
      var3.addActionListener((var1x) -> {
         this.showEncodePanel();
      });
      var4.addActionListener((var1x) -> {
         this.showDecodePanel();
      });
   }

   private void showEncodePanel() {
      JDialog var1 = new JDialog(this, "Encode Message", true);
      var1.setLayout(new GridLayout(7, 1, 10, 10));
      var1.setSize(400, 300);
      JButton var2 = new JButton("Select Image (.png/.jpg)");
      JTextField var3 = new JTextField();
      JPasswordField var4 = new JPasswordField();
      JButton var5 = new JButton("Encode and Save");
      JLabel var6 = new JLabel("", 0);
      var2.addActionListener((var2x) -> {
         JFileChooser var3 = new JFileChooser();
         int var4 = var3.showOpenDialog(this);
         if (var4 == 0) {
            this.selectedImage = var3.getSelectedFile();
            var2.setText("Selected: " + this.selectedImage.getName());
         }

      });
      var5.addActionListener((var4x) -> {
         if (this.selectedImage != null && !var3.getText().isEmpty() && var4.getPassword().length != 0) {
            try {
               SteganographyEncoder.encode(this.selectedImage, this.selectedImage, var3.getText(), new String(var4.getPassword()));
               JOptionPane.showMessageDialog(var1, "Message successfully encoded and saved to:\nD:\\java project\\encoded");
               var1.dispose();
            } catch (Exception var6) {
               JOptionPane.showMessageDialog(var1, "Failed to encode image. Error: " + var6.getMessage());
            }

         } else {
            JOptionPane.showMessageDialog(var1, "Please select image, enter message and password.");
         }
      });
      var1.add(var2);
      var1.add(new JLabel("Enter secret message:", 0));
      var1.add(var3);
      var1.add(new JLabel("Enter password:", 0));
      var1.add(var4);
      var1.add(var5);
      var1.add(var6);
      var1.setVisible(true);
   }

   private void showDecodePanel() {
      JDialog var1 = new JDialog(this, "Decode Message", true);
      var1.setLayout(new GridLayout(5, 1, 10, 10));
      var1.setSize(400, 250);
      JButton var2 = new JButton("Select Image (.png/.jpg)");
      JPasswordField var3 = new JPasswordField();
      JButton var4 = new JButton("Decode");
      JLabel var5 = new JLabel("Decoded Message will appear here.", 0);
      var2.addActionListener((var2x) -> {
         JFileChooser var3 = new JFileChooser();
         int var4 = var3.showOpenDialog(this);
         if (var4 == 0) {
            this.selectedImage = var3.getSelectedFile();
            var2.setText("Selected: " + this.selectedImage.getName());
         }

      });
      var4.addActionListener((var4x) -> {
         if (this.selectedImage != null && var3.getPassword().length != 0) {
            try {
               String var5x = SteganographyDecoder.decode(this.selectedImage, new String(var3.getPassword()));
               var5.setText("Message: " + var5x);
            } catch (Exception var6) {
               var5.setText("Error reading image.");
            }

         } else {
            JOptionPane.showMessageDialog(var1, "Select image and enter password.");
         }
      });
      var1.add(var2);
      var1.add(new JLabel("Enter password:", 0));
      var1.add(var3);
      var1.add(var4);
      var1.add(var5);
      var1.setVisible(true);
   }

   public static void main(String[] var0) {
      SwingUtilities.invokeLater(() -> {
         Main var0 = new Main();
         var0.setVisible(true);
      });
   }
}
